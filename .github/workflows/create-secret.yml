name: Create secret using octokit.js

on: 
  workflow_dispatch

jobs:
  create-secret-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install deps
        run: |
          npm install tweetsodium@0.0.4
      - uses: actions/github-script@v6
        with:
            GITHUB_REPO_ACCESS_TOKEN: ${{ inputs.GITHUB_REPO_ACCESS_TOKEN }} # GITHUB_REPO_ACCESS_TOKEN is github personal access token with repo write access
        script: |
            const sodium = require("tweetsodium");

            const publicKey = await github.rest.actions.getRepoPublicKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // encrypt the value using instructions here https://docs.github.com/en/rest/actions/secrets#create-or-update-an-organization-secret  
            const key = publicKey.data.key;
            const secretToAdd = "aws-iam-role-with-access-to-empty-s3-bucket-only"; // This would be coming from outputs of `serverless.yml` framework
            const messageBytes = Buffer.from(secretToAdd);
            const keyBytes = Buffer.from(key, "base64");
            const encryptedBytes = sodium.seal(messageBytes, keyBytes);
            const encryptedSecret = Buffer.from(encryptedBytes).toString("base64");

            await github.rest.actions.createOrUpdateRepoSecret({
                owner: context.repo.owner,
                repo: context.repo.repo,
                secret_name: 'DUMMY_AWS_IAM_ROLE_ASSUME',
                encrypted_value: encryptedSecret,
                key_id: publicKey.data.key_id,
            });
